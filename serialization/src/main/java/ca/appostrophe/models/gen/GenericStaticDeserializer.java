/*

 THIS CLASS WAS GENERATED BY THE SUPPORT MODULE ON Wed Oct 18 16:05:49 EDT 2017, RUN THE SUPPORT MODULE TO RE-GENERATE THEM

*/

package ca.appostrophe.models.gen;

import com.fasterxml.jackson.core.JsonParser;

import java.io.InputStream;
import ca.appostrophe.types.DynamicType;

import ca.appostrophe.models.Artiste;

import ca.appostrophe.models.ArtPiece;


import ca.appostrophe.models.gen.typed.ArtisteStaticDeserializer;

import ca.appostrophe.models.gen.typed.ArtPieceStaticDeserializer;


import ca.appostrophe.serialization.SerializerInterface;
import ca.appostrophe.serialization.JsonParserSerializerInterface;
import ca.appostrophe.serialization.SerializationException;
import ca.appostrophe.types.serialization.DynamicTypeStaticDeserializer;


public class GenericStaticDeserializer implements JsonParserSerializerInterface{


    private final ArtisteStaticDeserializer mArtisteStaticDeserializer;
    private final DynamicTypeStaticDeserializer mDynamicTypeStaticDeserializer;
    private final ArtPieceStaticDeserializer mArtPieceStaticDeserializer;

    public GenericStaticDeserializer() {
        mArtisteStaticDeserializer = new ArtisteStaticDeserializer();
        mDynamicTypeStaticDeserializer = new DynamicTypeStaticDeserializer();
        mArtPieceStaticDeserializer = new ArtPieceStaticDeserializer();
    }

    @Override
    public <TObject> TObject deserialize(JsonParser parser, Class<TObject> klass) throws SerializationException {
        if (Artiste.class.equals(klass)) {
            return klass.cast(mArtisteStaticDeserializer.deserialize(parser, this));
        } else if (DynamicType.class.equals(klass)) {
            return klass.cast(mDynamicTypeStaticDeserializer.deserialize(parser, this));
        } else if (ArtPiece.class.equals(klass)) {
            return klass.cast(mArtPieceStaticDeserializer.deserialize(parser, this));
        } else
            throw new SerializationException("Unsupported DTO type: " + klass.getName(), klass);
    }

    @Override
    public <TObject> InputStream serialize(TObject entity, Class<TObject> klass) {
        return null;
    }
}
